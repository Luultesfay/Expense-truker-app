{"ast":null,"code":"var _jsxFileName = \"/Users/luulnegasi/Downloads/01-starting-setup/src/Components/ExpensesChart.js\";\nimport Chart from \"../Charts/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = props => {\n  //accept filtered data from Expenses.js\n  const ChartDataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"July\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n\n  for (const expense of props.expenses) {\n    const month = expense.date.getMonth();\n    ChartDataPoints[month].value += expense.Amount; //update the value of each month from the filtered expense\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      dataPoints: ChartDataPoints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","ExpensesChart","props","ChartDataPoints","label","value","expense","expenses","month","date","getMonth","Amount"],"sources":["/Users/luulnegasi/Downloads/01-starting-setup/src/Components/ExpensesChart.js"],"sourcesContent":["import Chart from \"../Charts/Chart\";\nconst ExpensesChart = (props) => {\n  //accept filtered data from Expenses.js\n  const ChartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"July\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const month = expense.date.getMonth();\n    ChartDataPoints[month].value += expense.Amount; //update the value of each month from the filtered expense\n  }\n  return (\n    <div>\n      <Chart dataPoints={ChartDataPoints} />\n      {/*transfer data to Chart*/}\n    </div>\n  );\n};\nexport default ExpensesChart;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,iBAAlB;;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAC/B;EACA,MAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CADsB,EAEtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAFsB,EAGtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAHsB,EAItB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAJsB,EAKtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CALsB,EAMtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CANsB,EAOtB;IAAED,KAAK,EAAE,MAAT;IAAiBC,KAAK,EAAE;EAAxB,CAPsB,EAQtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CARsB,EAStB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CATsB,EAUtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAVsB,EAWtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAXsB,EAYtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAZsB,CAAxB;;EAeA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,QAA5B,EAAsC;IACpC,MAAMC,KAAK,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAAd;IACAP,eAAe,CAACK,KAAD,CAAf,CAAuBH,KAAvB,IAAgCC,OAAO,CAACK,MAAxC,CAFoC,CAEY;EACjD;;EACD,oBACE;IAAA,uBACE,QAAC,KAAD;MAAO,UAAU,EAAER;IAAnB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA3BD;;KAAMF,a;AA4BN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}